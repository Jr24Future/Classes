#include <stdint.h>
#include "ping.h"
#include "servo.h"
#include "lcd.h"
#include "uart.h"
#include "Timer.h"
#include "adc.h"
#include "button.h"
#include "movement.h"
#include "open_interface.h"

int main(void) {
    // Initialize peripherals
    lcd_init();
    servo_init();
    button_init(); // Initialize buttons
    uart_init(115200);

    float current_position = 90.0; // Start at 90 degrees
    int direction = 1;             // 1 for clockwise, -1 for counterclockwise
    char buffer[50];               // Buffer to store formatted strings

    servo_move(current_position);  // Move to initial position
    lcd_printf("Position: %.1f\nDirection: CW", current_position);

    while (1) {
        int button = button_getButton(); // Get the currently pressed button

        if (button == 1) { // SW1: Move 1 degree
            current_position += direction * 1;
        } else if (button == 2) { // SW2: Move 5 degrees
            current_position += direction * 5;
        } else if (button == 3) { // SW3: Toggle direction
            direction *= -1; // Reverse direction
            lcd_printf("Direction: %s", (direction == 1) ? "CW" : "CCW");
            timer_waitMillis(300); // Debounce delay
        } else if (button == 4) { // SW4: Move to 0 or 180 degrees
            current_position = (direction == 1) ? 0 : 180;
        }

        // Ensure position is within 0 to 180 degrees
        if (current_position < 0) current_position = 0;
        if (current_position > 180) current_position = 180;

        int match_value = servo_move(current_position); // Move the servo

        // Format and send position and match value over UART
        sprintf(buffer, "Position: %.1f degrees, Match: %d\n", current_position, match_value);
        uart_sendStr(buffer);

        // Display the current position and match value on the LCD
        lcd_printf("Pos: %.1f°\nMatch: %d", current_position, match_value);

        timer_waitMillis(100); // Adjust delay as needed
    }

    return 0;
}
